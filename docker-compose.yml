version: '3.8'

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: ./docker/airflow/Dockerfile
    args:
      AIRFLOW_VERSION: 2.9.2
  image: amazon_scraper_airflow_custom:latest
  environment:
    - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    - AIRFLOW__CORE__FERNET_KEY=k6CpuyNfmTVlx6NSfe0Ly34M8P9s-q1exdjyXaJ4Cgc=
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
    - AIRFLOW__LOGGING__LOGGING_LEVEL=INFO
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__CELERY__BROKER_URL=redis://:airflow@redis:6379/0
    - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
    - AIRFLOW_CONN_SELENIUM_GRID=selenium://?host=http%3A%2F%2Fselenium-hub%3A4444%2Fwd%2Fhub
    - PYTHONUNBUFFERED=1
  volumes:
    - ./airflow_dags:/opt/airflow/dags
    - ./logs/airflow:/opt/airflow/logs
    - ./logs/scrapers:/opt/airflow/logs/scrapers
    - ./data:/opt/airflow/data
    - ./config/scraping_config.yaml:/opt/airflow/config/scraping_config.yaml
    - ./scrapers:/opt/airflow/scrapers
    - ./utils:/opt/airflow/utils
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
  user: "50000:0"
  restart: unless-stopped

services:
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow", "-d", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:6.2-alpine
    command: redis-server --requirepass airflow
    ports:
      - "6379:6379"
    volumes:
      - redis-data-volume:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "airflow", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init_container
    entrypoint: /bin/bash
    command:
      - -c
      - |
        set -e
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --email admin@example.com \
          --role Admin || echo "Admin user already exists or failed to create."
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $(hostname) --limit 1 | grep \"is_alive: True\""]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-worker:
    <<: *airflow-common
    command: airflow celery worker
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "airflow celery status | grep OK"]
      interval: 60s
      timeout: 30s
      retries: 5

  flower:
    <<: *airflow-common
    command: airflow celery flower
    ports:
      - "5555:5555"
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  selenium-hub:
    image: selenium/hub:4.20.0
    ports:
      - "4444:4444"
    environment:
      - SE_OPTS=--session-request-timeout 300 --session-retry-interval 5 --session-queue-size 100
    restart: unless-stopped

  chrome-node:
    image: selenium/node-chrome:4.20.0
    shm_size: '2gb'
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=5
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    restart: unless-stopped

volumes:
  postgres-db-volume:
  redis-data-volume: